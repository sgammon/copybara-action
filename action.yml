name: "Copybara Action"
description: "Transforms and moves code between repositories."
author: "Will Molloy <willjoemolloy@gmail.com>, Ji Paik <jjeonie@gmail.com>, Sam Gammon <sam.g@cookies.co>"

inputs:
  git_name:
    description: "git config username, for authoring with Copybara"
    required: true
  git_email:
    description: "git config email, for authoring with Copybara"
    required: true
  git_credentials:
    description: "secret binding for Git auth"
    required: true
  gpg_key:
    description: "GPG key for signing (private key)"
    required: true
  gpg_key_id:
    description: "GPG key ID (to reference when signing)"
    required: true
  ssh_key:
    description: "ssh public key, for authenticating with Copybara"
    required: true
  ssh_known_hosts:
    description: "ssh known hosts file contents, for authenticating with Copybara"
    required: true
  workflow:
    description: "workflow to run"
    required: true
  command:
    description: "command to run"
    required: true
  ref:
    description: "explicit ref to pass to copybara, if desired"
  options:
    description: "flags to pass to Copybara"
  image:
    description: "build image to use (for instance, 'sharelatex/copybara:latest')"

runs:
  using: "composite"
  steps:
    - run: |
        mkdir -p ~/.ssh ~/.config/git
        echo $'${{ inputs.ssh_key }}' > ~/.ssh/id_rsa
        echo $'${{ inputs.ssh_known_hosts }}' > ~/.ssh/known_hosts
        echo $'${{ inputs.git_credentials }}' > ~/.config/git/credentials
        echo $'${{ inputs.gpg_key }}' > ~/gpg.key
        echo $'${{ inputs.gpg_key_id }}' > ~/gpg.key.id
      shell: bash

    - run: docker pull ${{ inputs.image }}
      shell: bash

    - run: |
        git config --global user.name ${{ inputs.git_name }}
        git config --global user.email ${{ inputs.git_email }}
        git config --global commit.gpgsign true
        git config --global user.signingkey ${{ inputs.gpg_key_id }}
        gpg --import ~/gpg.key
        set +e
        docker run \
           -v ~:/root \
           -v "$(pwd)":/usr/src/app \
           -e COPYBARA_SUBCOMMAND="${{ inputs.command }}" \
           -e COPYBARA_WORKFLOW="${{ inputs.workflow }}" \
           -e COPYBARA_OPTIONS="${{ inputs.options }}" \
           -e COPYBARA_SOURCEREF="${{ inputs.ref }}" \
           -i ${{ inputs.image }} copybara;
        set -e
        retVal=$?
        if [ $retVal -ne 0 ]; then
            if [ $retVal -eq 4]; then
              echo "No change required."
              exit 0
            fi
            echo "Error"
        fi
        exit $retVal
      shell: bash

branding:
  icon: 'copy'
  color: 'blue'
